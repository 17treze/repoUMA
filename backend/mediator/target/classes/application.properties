spring.profiles.active = dev

spring.main.banner-mode = off

it.tndigit.a4g.security.web = true

server.servlet.context-path = /fascicolo/mediator

#cron multi event filtered (da framework-ext-validazione >= 2.5.1)
# si deve disabilitare quello legacy (it.tndigit.event.scheduler) impostandolo a false o togliendolo
it.tndigit.event.scheduler.multievent = true
#espressione cron generale; non considerera' i tipi di evento con classname completo (vedere righe successive)
it.tndigit.event.scheduler.multievent.cron = 00 00 07 * * *
# espressione cron (e massimo tempo di retry ".cron.max.hours") per un determinato tipo di evento specificato con classname.
# I tipi di eventi possono essere diversi
# evento di anagrafica
it.tndigitale.a4g.fascicolo.mediator.business.service.event.EndValidazioneFascicoloEvent.multievent.cron.expr=0 0/30 * * * ?
it.tndigitale.a4g.fascicolo.mediator.business.service.event.EndValidazioneFascicoloEvent.multievent.cron.max.hours=12
# evento di zootecnia
it.tndigitale.a4g.fascicolo.mediator.business.service.event.ZootecniaEndValidazioneFascicoloEvent.multievent.cron.expr=0 0/30 * * * ?
it.tndigitale.a4g.fascicolo.mediator.business.service.event.ZootecniaEndValidazioneFascicoloEvent.multievent.cron.max.hours=12

#verifica controlli di completezza in modo da impostare lo stato del fascicolo in CONTROLLATO_OK o IN_AGGIORNAMENTO a
#seconda dell'esito dei controlli ogni minuto
it.tndigit.mediator.scheduler.fascicolo.controlli.completezza.cron=0 0/1 * * * ?
it.tndigit.mediator.scheduler.fascicolo.controlli.completezza.username=USER_SCHEDULER_EVENT
