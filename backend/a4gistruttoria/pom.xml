<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>it.tndigitale</groupId>
	<artifactId>a4gistruttoria</artifactId>
	<version>1.0.0</version>
	<packaging>${project.packaging}</packaging>

	<name>a4gistruttoria</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<oracle.version>12.1.0</oracle.version>
		<swagger2.version>2.8.0</swagger2.version>
		<liquibase-maven-plugin.version>3.6.2</liquibase-maven-plugin.version>

		<show-confirm-schema>true</show-confirm-schema>

		<!-- Configurazione Zipkin <spring-cloud.version>Finchley.RELEASE</spring-cloud.version> -->

		<!-- Configurazione release stabili di client e framework In fase di developing 
			Ã¨ possibile sovrascriverle con mvn -Da4g.framework.version=1.1.0-SNAPSHOT 
			mvn -Da4g.client.version=1.1.0-SNAPSHOT -->
		<a4g.framework.version>2.4.8</a4g.framework.version>
		<a4g.client.version>2.8.48</a4g.client.version>
		
	</properties>

	<dependencies>
		<!-- Client SDK e framework A4G -->
		<dependency>
			<groupId>it.tndigitale.a4g</groupId>
			<artifactId>framework</artifactId>
			<version>${a4g.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>it.tndigitale.a4g</groupId>
			<artifactId>client-sdk-istruttoria</artifactId>
			<version>${a4g.client.version}</version>
			<exclusions>
               <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-ext</artifactId>
               </exclusion>
               <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
               </exclusion>
               <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mailapi</artifactId>
               </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.6</version>
		</dependency>
		<dependency>
			<groupId>org.mockftpserver</groupId>
			<artifactId>MockFtpServer</artifactId>
			<version>2.7.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

<!--  
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
-->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
		<!--  
  		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc7</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>3.1.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.3</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.23.1-GA</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.20.0</version>
			<scope>test</scope>
		</dependency>
		<!-- Zipkin
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency> -->
	</dependencies>
	
	<!-- <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement> -->
	
	<build>
		<finalName>a4gistruttoria</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
			<!-- 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>		

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
            </plugin>	
             -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Dependencies>jdk.unsupported</Dependencies>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>11</source>
					<target>11</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.14.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<schemaDirectory>
						${project.basedir}/src/main/resources/dtd
					</schemaDirectory>
					<schemaIncludes>
						<include>*.wsdl</include>
					</schemaIncludes>
					<bindingDirectory>${project.basedir}/src/main/resources/jaxb</bindingDirectory>
					<extension>true</extension>
					<schemaLanguage>DTD</schemaLanguage>
					<schemaIncludes>
						<schemaInclude>*.dtd</schemaInclude>
					</schemaIncludes>
					<bindingIncludes>
						<bindingInclude>*.jaxb</bindingInclude>
					</bindingIncludes>
				</configuration>
			</plugin>
		</plugins>
		<!-- <resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources> -->
	</build>

	<profiles>
		<!-- Profili per attivare i vari ambienti da sviluppo a produzione -->
		<profile>
			<id>dev</id>
			<properties>
				<project.packaging>jar</project.packaging>
				<activatedProperties>dev</activatedProperties>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev-single</id>
			<properties>
				<project.packaging>jar</project.packaging>
				<activatedProperties>dev-single</activatedProperties>
			</properties>
		</profile>
		<profile>
            <id>boot-qual</id>
            <properties>
                <project.packaging>jar</project.packaging>
                <activatedProperties>boot-qual</activatedProperties>
            </properties>
        </profile>
		<profile>
			<id>boot-test</id>
			<properties>
				<project.packaging>jar</project.packaging>
				<activatedProperties>boot-test</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>boot-dev</id>
			<properties>
				<project.packaging>jar</project.packaging>
				<activatedProperties>boot-dev</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>dev-myjboss</id>
			<properties>
				<project.packaging>war</project.packaging>
				<activatedProperties>myjboss</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<project.packaging>war</project.packaging>
				<activatedProperties>test</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>quality</id>
			<properties>
				<project.packaging>war</project.packaging>
				<activatedProperties>quality</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>produzione</id>
			<properties>
				<project.packaging>war</project.packaging>
				<activatedProperties>produzione</activatedProperties>
			</properties>
		</profile>

		<!-- mvn package -P deploy.jboss,jboss.svil,dev-myjboss -->
		<profile>
			<id>deploy.jboss</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<move todir="${jboss.home}/server/a4g/deployments">
											<fileset dir="${project.build.directory}">
												<include name="*.war.original" />
											</fileset>
											<globmapper from="*.war.original" to="*.war" />
										</move>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profili di Liquibase: - mvn -P update-db-svil - mvn -P update-db-test 
			- mvn -P update-db-quality - mvn -P update-db-produzione -->
		<profile>
			<id>update-db-svil</id>
			<properties>
				<project.packaging>jar</project.packaging>
			</properties>
			<build>
				<defaultGoal>process-resources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>superuser</id>
								<configuration>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFile>config/database/liquibase-svil.properties</propertyFile>
									<expressionVariables>
										<user.writer>UA4GWRT03</user.writer>
										<user.reader>UA4GREAD01</user.reader>
									</expressionVariables>
									<!-- <clearCheckSums>true</clearCheckSums> -->
									<labels>SVIL</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>wrt</id>
								<configuration>
									<changelogCatalogName>SUA4G03</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-svil_wrt.properties</propertyFile>
									<expressionVariables>
										<user.superuser>SUA4G03</user.superuser>
									</expressionVariables>
									<labels>SVIL</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>update-db-test</id>
			<properties>
				<project.packaging>jar</project.packaging>
			</properties>
			<build>
				<defaultGoal>process-resources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>superuser</id>
								<configuration>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFile>config/database/liquibase-test.properties</propertyFile>
									<expressionVariables>
										<user.writer>UA4GWRT04</user.writer>
										<user.reader>UA4GREAD01</user.reader>
									</expressionVariables>
									<!-- <clearCheckSums>true</clearCheckSums> -->
									<labels>TEST</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>wrt</id>
								<configuration>
									<changelogCatalogName>SUA4G04</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-test_wrt.properties</propertyFile>
									<expressionVariables>
										<user.superuser>SUA4G04</user.superuser>
									</expressionVariables>
									<labels>TEST</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>read</id>
								<configuration>
									<changelogCatalogName>SUA4G04</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-test_read.properties</propertyFile>
									<expressionVariables>
										<user.superuser>SUA4G04</user.superuser>
									</expressionVariables>
									<labels>TEST</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>update-db-quality</id>
			<properties>
				<project.packaging>jar</project.packaging>
			</properties>
			<build>
				<defaultGoal>process-resources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>superuser</id>
								<configuration>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFile>config/database/liquibase-qual.properties</propertyFile>
									<password>${password.superuser}</password>
									<expressionVariables>
										<user.writer>UA4GWRT02</user.writer>
										<user.reader>UA4GREAD01</user.reader>
									</expressionVariables>
									<labels>QUAL</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>wrt</id>
								<configuration>
									<changelogCatalogName>SUA4G02</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-qual_wrt.properties</propertyFile>
									<password>${password.wrt}</password>
									<expressionVariables>
										<user.superuser>SUA4G02</user.superuser>
									</expressionVariables>
									<labels>QUAL</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>read</id>
								<configuration>
									<changelogCatalogName>SUA4G02</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-qual_read.properties</propertyFile>
									<password>${password.read}</password>
									<expressionVariables>
										<user.superuser>SUA4G02</user.superuser>
									</expressionVariables>
									<labels>QUAL</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>update-db-produzione</id>
			<properties>
				<project.packaging>jar</project.packaging>
			</properties>
			<build>
				<defaultGoal>process-resources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${liquibase-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>superuser</id>
								<configuration>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFile>config/database/liquibase-prod.properties</propertyFile>
									<password>${password.superuser}</password>
									<expressionVariables>
										<user.writer>UA4GWRT02</user.writer>
										<user.reader>UA4GREAD01</user.reader>
									</expressionVariables>
									<labels>PROD</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>wrt</id>
								<configuration>
									<changelogCatalogName>SUA4G02</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-prod_wrt.properties</propertyFile>
									<password>${password.wrt}</password>
									<expressionVariables>
										<user.superuser>SUA4G02</user.superuser>
									</expressionVariables>
									<labels>PROD</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
							<execution>
								<id>read</id>
								<configuration>
									<changelogCatalogName>SUA4G02</changelogCatalogName>
									<promptOnNonLocalDatabase>${show-confirm-schema}</promptOnNonLocalDatabase>
									<propertyFileWillOverride>true</propertyFileWillOverride>
									<propertyFile>config/database/liquibase-prod_read.properties</propertyFile>
									<password>${password.read}</password>
									<expressionVariables>
										<user.superuser>SUA4G02</user.superuser>
									</expressionVariables>
									<labels>PROD</labels>
								</configuration>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>a4g central tndigit</id>
			<url>https://maven.infotn.it/nexus/repository/a4g_public/</url>
		</repository>
	</repositories>
</project>
