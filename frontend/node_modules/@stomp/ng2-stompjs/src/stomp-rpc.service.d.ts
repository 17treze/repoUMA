import { Message, StompHeaders } from '@stomp/stompjs';
import { Observable } from "rxjs";
import { StompRService } from "./stomp-r.service";
import { StompRPCConfig } from "./stomp-rpc.config";
/**
 * An implementation of RPC service using messaging.
 *
 * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.
 */
import * as ɵngcc0 from '@angular/core';
export declare class StompRPCService {
    private stompService;
    private stompRPCConfig;
    private _replyQueueName;
    private _setupReplyQueue;
    private _repliesObservable;
    /**
     * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.
     */
    constructor(stompService: StompRService, stompRPCConfig?: StompRPCConfig);
    /**
     * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.
     */
    rpc(serviceEndPoint: string, payload: string, headers?: StompHeaders): Observable<Message>;
    /**
     * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).
     */
    stream(serviceEndPoint: string, payload: string, headers?: StompHeaders): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StompRPCService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<StompRPCService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvbXAtcnBjLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsic3RvbXAtcnBjLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2UsIFN0b21wSGVhZGVycyB9IGZyb20gJ0BzdG9tcC9zdG9tcGpzJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgU3RvbXBSU2VydmljZSB9IGZyb20gXCIuL3N0b21wLXIuc2VydmljZVwiO1xuaW1wb3J0IHsgU3RvbXBSUENDb25maWcgfSBmcm9tIFwiLi9zdG9tcC1ycGMuY29uZmlnXCI7XG4vKipcbiAqIEFuIGltcGxlbWVudGF0aW9uIG9mIFJQQyBzZXJ2aWNlIHVzaW5nIG1lc3NhZ2luZy5cbiAqXG4gKiBQbGVhc2Ugc2VlIHRoZSBbZ3VpZGVdKC4uL2FkZGl0aW9uYWwtZG9jdW1lbnRhdGlvbi9ycGMtLS1yZW1vdGUtcHJvY2VkdXJlLWNhbGwuaHRtbCkgZm9yIGRldGFpbHMuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFN0b21wUlBDU2VydmljZSB7XG4gICAgcHJpdmF0ZSBzdG9tcFNlcnZpY2U7XG4gICAgcHJpdmF0ZSBzdG9tcFJQQ0NvbmZpZztcbiAgICBwcml2YXRlIF9yZXBseVF1ZXVlTmFtZTtcbiAgICBwcml2YXRlIF9zZXR1cFJlcGx5UXVldWU7XG4gICAgcHJpdmF0ZSBfcmVwbGllc09ic2VydmFibGU7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlLCBzZWUgdGhlIFtndWlkZV0oLi4vYWRkaXRpb25hbC1kb2N1bWVudGF0aW9uL3JwYy0tLXJlbW90ZS1wcm9jZWR1cmUtY2FsbC5odG1sKSBmb3IgZGV0YWlscy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzdG9tcFNlcnZpY2U6IFN0b21wUlNlcnZpY2UsIHN0b21wUlBDQ29uZmlnPzogU3RvbXBSUENDb25maWcpO1xuICAgIC8qKlxuICAgICAqIE1ha2UgYW4gUlBDIHJlcXVlc3QuIFNlZSB0aGUgW2d1aWRlXSguLi9hZGRpdGlvbmFsLWRvY3VtZW50YXRpb24vcnBjLS0tcmVtb3RlLXByb2NlZHVyZS1jYWxsLmh0bWwpIGZvciBleGFtcGxlLlxuICAgICAqL1xuICAgIHJwYyhzZXJ2aWNlRW5kUG9pbnQ6IHN0cmluZywgcGF5bG9hZDogc3RyaW5nLCBoZWFkZXJzPzogU3RvbXBIZWFkZXJzKTogT2JzZXJ2YWJsZTxNZXNzYWdlPjtcbiAgICAvKipcbiAgICAgKiBNYWtlIGFuIFJQQyBzdHJlYW0gcmVxdWVzdC4gU2VlIHRoZSBbZ3VpZGVdKC4uL2FkZGl0aW9uYWwtZG9jdW1lbnRhdGlvbi9ycGMtLS1yZW1vdGUtcHJvY2VkdXJlLWNhbGwuaHRtbCkuXG4gICAgICovXG4gICAgc3RyZWFtKHNlcnZpY2VFbmRQb2ludDogc3RyaW5nLCBwYXlsb2FkOiBzdHJpbmcsIGhlYWRlcnM/OiBTdG9tcEhlYWRlcnMpOiBhbnk7XG59XG4iXX0=