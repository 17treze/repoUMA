import { ElementRef, OnInit, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { BlockableUI } from 'primeng-lts/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng-lts/api';
import * as ɵngcc3 from 'primeng-lts/paginator';
export declare class DataView implements OnInit, AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    paginator: boolean;
    rows: number;
    totalRecords: number;
    pageLinks: number;
    rowsPerPageOptions: any[];
    paginatorPosition: string;
    alwaysShowPaginator: boolean;
    paginatorDropdownAppendTo: any;
    paginatorDropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    showFirstLastIcon: boolean;
    lazy: boolean;
    emptyMessage: string;
    onLazyLoad: EventEmitter<any>;
    style: any;
    styleClass: string;
    trackBy: Function;
    filterBy: string;
    filterLocale: string;
    loading: boolean;
    loadingIcon: string;
    first: number;
    sortField: string;
    sortOrder: number;
    value: any[];
    onPage: EventEmitter<any>;
    onSort: EventEmitter<any>;
    onChangeLayout: EventEmitter<any>;
    header: any;
    footer: any;
    templates: QueryList<any>;
    _value: any[];
    listItemTemplate: TemplateRef<any>;
    gridItemTemplate: TemplateRef<any>;
    itemTemplate: TemplateRef<any>;
    paginatorLeftTemplate: TemplateRef<any>;
    paginatorRightTemplate: TemplateRef<any>;
    paginatorDropdownItemTemplate: TemplateRef<any>;
    filteredValue: any[];
    filterValue: string;
    initialized: boolean;
    _layout: string;
    layout: string;
    constructor(el: ElementRef);
    ngOnInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterContentInit(): void;
    updateItemTemplate(): void;
    changeLayout(layout: string): void;
    updateTotalRecords(): void;
    paginate(event: any): void;
    sort(): void;
    isEmpty(): boolean;
    createLazyLoadMetadata(): any;
    getBlockableElement(): HTMLElement;
    filter(filter: string, filterMatchMode?: string): void;
    hasFilter(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataView, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataView, "p-dataView", never, { "pageLinks": "pageLinks"; "paginatorPosition": "paginatorPosition"; "alwaysShowPaginator": "alwaysShowPaginator"; "paginatorDropdownScrollHeight": "paginatorDropdownScrollHeight"; "currentPageReportTemplate": "currentPageReportTemplate"; "showFirstLastIcon": "showFirstLastIcon"; "emptyMessage": "emptyMessage"; "trackBy": "trackBy"; "loadingIcon": "loadingIcon"; "first": "first"; "layout": "layout"; "totalRecords": "totalRecords"; "rows": "rows"; "paginator": "paginator"; "rowsPerPageOptions": "rowsPerPageOptions"; "paginatorDropdownAppendTo": "paginatorDropdownAppendTo"; "showCurrentPageReport": "showCurrentPageReport"; "lazy": "lazy"; "style": "style"; "styleClass": "styleClass"; "filterBy": "filterBy"; "filterLocale": "filterLocale"; "loading": "loading"; "sortField": "sortField"; "sortOrder": "sortOrder"; "value": "value"; }, { "onLazyLoad": "onLazyLoad"; "onPage": "onPage"; "onSort": "onSort"; "onChangeLayout": "onChangeLayout"; }, ["header", "footer", "templates"], ["p-header", "p-footer"]>;
}
export declare class DataViewLayoutOptions {
    dv: DataView;
    style: any;
    styleClass: string;
    constructor(dv: DataView);
    changeLayout(event: Event, layout: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataViewLayoutOptions, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataViewLayoutOptions, "p-dataViewLayoutOptions", never, { "style": "style"; "styleClass": "styleClass"; }, {}, never, never>;
}
export declare class DataViewModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DataViewModule, [typeof DataView, typeof DataViewLayoutOptions], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.PaginatorModule], [typeof DataView, typeof ɵngcc2.SharedModule, typeof DataViewLayoutOptions]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DataViewModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXZpZXcuZC50cyIsInNvdXJjZXMiOlsiZGF0YXZpZXcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0LCBFdmVudEVtaXR0ZXIsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmxvY2thYmxlVUkgfSBmcm9tICdwcmltZW5nLWx0cy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVZpZXcgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIEJsb2NrYWJsZVVJLCBPbkNoYW5nZXMge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHBhZ2luYXRvcjogYm9vbGVhbjtcbiAgICByb3dzOiBudW1iZXI7XG4gICAgdG90YWxSZWNvcmRzOiBudW1iZXI7XG4gICAgcGFnZUxpbmtzOiBudW1iZXI7XG4gICAgcm93c1BlclBhZ2VPcHRpb25zOiBhbnlbXTtcbiAgICBwYWdpbmF0b3JQb3NpdGlvbjogc3RyaW5nO1xuICAgIGFsd2F5c1Nob3dQYWdpbmF0b3I6IGJvb2xlYW47XG4gICAgcGFnaW5hdG9yRHJvcGRvd25BcHBlbmRUbzogYW55O1xuICAgIHBhZ2luYXRvckRyb3Bkb3duU2Nyb2xsSGVpZ2h0OiBzdHJpbmc7XG4gICAgY3VycmVudFBhZ2VSZXBvcnRUZW1wbGF0ZTogc3RyaW5nO1xuICAgIHNob3dDdXJyZW50UGFnZVJlcG9ydDogYm9vbGVhbjtcbiAgICBzaG93Rmlyc3RMYXN0SWNvbjogYm9vbGVhbjtcbiAgICBsYXp5OiBib29sZWFuO1xuICAgIGVtcHR5TWVzc2FnZTogc3RyaW5nO1xuICAgIG9uTGF6eUxvYWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHRyYWNrQnk6IEZ1bmN0aW9uO1xuICAgIGZpbHRlckJ5OiBzdHJpbmc7XG4gICAgZmlsdGVyTG9jYWxlOiBzdHJpbmc7XG4gICAgbG9hZGluZzogYm9vbGVhbjtcbiAgICBsb2FkaW5nSWNvbjogc3RyaW5nO1xuICAgIGZpcnN0OiBudW1iZXI7XG4gICAgc29ydEZpZWxkOiBzdHJpbmc7XG4gICAgc29ydE9yZGVyOiBudW1iZXI7XG4gICAgdmFsdWU6IGFueVtdO1xuICAgIG9uUGFnZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Tb3J0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNoYW5nZUxheW91dDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaGVhZGVyOiBhbnk7XG4gICAgZm9vdGVyOiBhbnk7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBfdmFsdWU6IGFueVtdO1xuICAgIGxpc3RJdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZ3JpZEl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcGFnaW5hdG9yTGVmdFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHBhZ2luYXRvclJpZ2h0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcGFnaW5hdG9yRHJvcGRvd25JdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZmlsdGVyZWRWYWx1ZTogYW55W107XG4gICAgZmlsdGVyVmFsdWU6IHN0cmluZztcbiAgICBpbml0aWFsaXplZDogYm9vbGVhbjtcbiAgICBfbGF5b3V0OiBzdHJpbmc7XG4gICAgbGF5b3V0OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlSXRlbVRlbXBsYXRlKCk6IHZvaWQ7XG4gICAgY2hhbmdlTGF5b3V0KGxheW91dDogc3RyaW5nKTogdm9pZDtcbiAgICB1cGRhdGVUb3RhbFJlY29yZHMoKTogdm9pZDtcbiAgICBwYWdpbmF0ZShldmVudDogYW55KTogdm9pZDtcbiAgICBzb3J0KCk6IHZvaWQ7XG4gICAgaXNFbXB0eSgpOiBib29sZWFuO1xuICAgIGNyZWF0ZUxhenlMb2FkTWV0YWRhdGEoKTogYW55O1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgZmlsdGVyKGZpbHRlcjogc3RyaW5nLCBmaWx0ZXJNYXRjaE1vZGU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIGhhc0ZpbHRlcigpOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVZpZXdMYXlvdXRPcHRpb25zIHtcbiAgICBkdjogRGF0YVZpZXc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZHY6IERhdGFWaWV3KTtcbiAgICBjaGFuZ2VMYXlvdXQoZXZlbnQ6IEV2ZW50LCBsYXlvdXQ6IHN0cmluZyk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVmlld01vZHVsZSB7XG59XG4iXX0=