import { ElementRef, OnDestroy, EventEmitter, QueryList, TemplateRef, OnInit, OnChanges, AfterContentChecked, SimpleChanges, ChangeDetectorRef, AfterViewInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng-lts/api';
export declare class Galleria implements OnChanges, OnDestroy {
    element: ElementRef;
    activeIndex: number;
    fullScreen: boolean;
    id: string;
    value: any[];
    numVisible: number;
    responsiveOptions: any[];
    showItemNavigators: boolean;
    showThumbnailNavigators: boolean;
    showItemNavigatorsOnHover: boolean;
    changeItemOnIndicatorHover: boolean;
    circular: boolean;
    autoPlay: boolean;
    transitionInterval: number;
    showThumbnails: boolean;
    thumbnailsPosition: string;
    verticalThumbnailViewPortHeight: string;
    showIndicators: boolean;
    showIndicatorsOnItem: boolean;
    indicatorsPosition: string;
    baseZIndex: number;
    maskClass: string;
    containerClass: string;
    containerStyle: any;
    mask: ElementRef;
    visible: boolean;
    activeIndexChange: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    templates: QueryList<any>;
    _visible: boolean;
    _activeIndex: number;
    headerFacet: any;
    footerFacet: any;
    indicatorFacet: any;
    captionFacet: any;
    zIndex: string;
    constructor(element: ElementRef);
    ngAfterContentInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    onMaskHide(): void;
    onActiveItemChange(index: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Galleria, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Galleria, "p-galleria", never, { "fullScreen": "fullScreen"; "numVisible": "numVisible"; "showItemNavigators": "showItemNavigators"; "showThumbnailNavigators": "showThumbnailNavigators"; "showItemNavigatorsOnHover": "showItemNavigatorsOnHover"; "changeItemOnIndicatorHover": "changeItemOnIndicatorHover"; "circular": "circular"; "autoPlay": "autoPlay"; "transitionInterval": "transitionInterval"; "showThumbnails": "showThumbnails"; "thumbnailsPosition": "thumbnailsPosition"; "verticalThumbnailViewPortHeight": "verticalThumbnailViewPortHeight"; "showIndicators": "showIndicators"; "showIndicatorsOnItem": "showIndicatorsOnItem"; "indicatorsPosition": "indicatorsPosition"; "baseZIndex": "baseZIndex"; "activeIndex": "activeIndex"; "visible": "visible"; "id": "id"; "value": "value"; "responsiveOptions": "responsiveOptions"; "maskClass": "maskClass"; "containerClass": "containerClass"; "containerStyle": "containerStyle"; }, { "activeIndexChange": "activeIndexChange"; "visibleChange": "visibleChange"; }, ["templates"], never>;
}
export declare class GalleriaContent {
    galleria: Galleria;
    activeIndex: number;
    maskHide: EventEmitter<any>;
    activeItemChange: EventEmitter<any>;
    id: string;
    slideShowActicve: boolean;
    _activeIndex: number;
    slideShowActive: boolean;
    interval: any;
    styleClass: string;
    constructor(galleria: Galleria);
    galleriaClass(): string;
    startSlideShow(): void;
    stopSlideShow(): void;
    getPositionClass(preClassName: any, position: any): string;
    isVertical(): boolean;
    onActiveIndexChange(index: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaContent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaContent, "p-galleriaContent", never, { "activeIndex": "activeIndex"; }, { "maskHide": "maskHide"; "activeItemChange": "activeItemChange"; }, never, never>;
}
export declare class GalleriaItemSlot {
    templates: QueryList<any>;
    index: number;
    item: any;
    type: string;
    contentTemplate: TemplateRef<any>;
    context: any;
    _item: any;
    ngAfterContentInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaItemSlot, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaItemSlot, "p-galleriaItemSlot", never, { "item": "item"; "templates": "templates"; "index": "index"; "type": "type"; }, {}, never, never>;
}
export declare class GalleriaItem implements OnInit {
    circular: boolean;
    value: any[];
    showItemNavigators: boolean;
    showIndicators: boolean;
    slideShowActive: boolean;
    changeItemOnIndicatorHover: boolean;
    autoPlay: boolean;
    templates: QueryList<any>;
    indicatorFacet: any;
    captionFacet: any;
    startSlideShow: EventEmitter<any>;
    stopSlideShow: EventEmitter<any>;
    onActiveIndexChange: EventEmitter<any>;
    activeIndex: number;
    _activeIndex: number;
    activeItem: any;
    ngOnInit(): void;
    next(): void;
    prev(): void;
    stopTheSlideShow(): void;
    navForward(e: any): void;
    navBackward(e: any): void;
    onIndicatorClick(index: any): void;
    onIndicatorMouseEnter(index: any): void;
    onIndicatorKeyDown(index: any): void;
    isNavForwardDisabled(): boolean;
    isNavBackwardDisabled(): boolean;
    isIndicatorItemActive(index: any): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaItem, "p-galleriaItem", never, { "circular": "circular"; "showItemNavigators": "showItemNavigators"; "showIndicators": "showIndicators"; "slideShowActive": "slideShowActive"; "changeItemOnIndicatorHover": "changeItemOnIndicatorHover"; "autoPlay": "autoPlay"; "activeIndex": "activeIndex"; "value": "value"; "templates": "templates"; "indicatorFacet": "indicatorFacet"; "captionFacet": "captionFacet"; }, { "startSlideShow": "startSlideShow"; "stopSlideShow": "stopSlideShow"; "onActiveIndexChange": "onActiveIndexChange"; }, never, never>;
}
export declare class GalleriaThumbnails implements OnInit, AfterContentChecked, OnDestroy, AfterViewInit {
    private cd;
    containerId: string;
    value: any[];
    isVertical: boolean;
    slideShowActive: boolean;
    circular: boolean;
    responsiveOptions: any[];
    contentHeight: string;
    showThumbnailNavigators: boolean;
    templates: QueryList<any>;
    onActiveIndexChange: EventEmitter<any>;
    stopSlideShow: EventEmitter<any>;
    itemsContainer: ElementRef;
    numVisible: number;
    activeIndex: number;
    index: number;
    startPos: any;
    thumbnailsStyle: any;
    sortedResponsiveOptions: any;
    totalShiftedItems: number;
    page: number;
    documentResizeListener: any;
    _numVisible: number;
    d_numVisible: number;
    _oldNumVisible: number;
    _activeIndex: number;
    _oldactiveIndex: number;
    constructor(cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentChecked(): void;
    ngAfterViewInit(): void;
    createStyle(): void;
    calculatePosition(): void;
    getTabIndex(index: any): number;
    navForward(e: any): void;
    navBackward(e: any): void;
    onItemClick(index: any): void;
    step(dir: any): void;
    stopTheSlideShow(): void;
    changePageOnTouch(e: any, diff: any): void;
    getTotalPageNumber(): number;
    getMedianItemIndex(): number;
    onTransitionEnd(): void;
    onTouchEnd(e: any): void;
    onTouchMove(e: any): void;
    onTouchStart(e: any): void;
    isNavBackwardDisabled(): boolean;
    isNavForwardDisabled(): boolean;
    firstItemAciveIndex(): number;
    lastItemActiveIndex(): number;
    isItemActive(index: any): boolean;
    bindDocumentListeners(): void;
    unbindDocumentListeners(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaThumbnails, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaThumbnails, "p-galleriaThumbnails", never, { "isVertical": "isVertical"; "slideShowActive": "slideShowActive"; "circular": "circular"; "contentHeight": "contentHeight"; "showThumbnailNavigators": "showThumbnailNavigators"; "numVisible": "numVisible"; "activeIndex": "activeIndex"; "containerId": "containerId"; "value": "value"; "responsiveOptions": "responsiveOptions"; "templates": "templates"; }, { "onActiveIndexChange": "onActiveIndexChange"; "stopSlideShow": "stopSlideShow"; }, never, never>;
}
export declare class GalleriaModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<GalleriaModule, [typeof Galleria, typeof GalleriaContent, typeof GalleriaItemSlot, typeof GalleriaItem, typeof GalleriaThumbnails], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule], [typeof ɵngcc1.CommonModule, typeof Galleria, typeof GalleriaContent, typeof GalleriaItemSlot, typeof GalleriaItem, typeof GalleriaThumbnails, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<GalleriaModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,