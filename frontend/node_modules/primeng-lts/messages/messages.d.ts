import { OnDestroy, EventEmitter, AfterContentInit, ElementRef, QueryList, TemplateRef } from '@angular/core';
import { Message, MessageService } from 'primeng-lts/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class Messages implements AfterContentInit, OnDestroy {
    messageService: MessageService;
    el: ElementRef;
    value: Message[];
    closable: boolean;
    style: any;
    styleClass: string;
    enableService: boolean;
    key: string;
    escape: boolean;
    severity: string;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    templates: QueryList<any>;
    valueChange: EventEmitter<Message[]>;
    messageSubscription: Subscription;
    clearSubscription: Subscription;
    contentTemplate: TemplateRef<any>;
    constructor(messageService: MessageService, el: ElementRef);
    ngAfterContentInit(): void;
    hasMessages(): boolean;
    getSeverityClass(): string;
    clear(event: any): void;
    readonly icon: string;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Messages, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Messages, "p-messages", never, { "closable": "closable"; "enableService": "enableService"; "escape": "escape"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "value": "value"; "style": "style"; "styleClass": "styleClass"; "key": "key"; "severity": "severity"; }, { "valueChange": "valueChange"; }, ["templates"], never>;
}
export declare class MessagesModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MessagesModule, [typeof Messages], [typeof ɵngcc1.CommonModule], [typeof Messages]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MessagesModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuZC50cyIsInNvdXJjZXMiOlsibWVzc2FnZXMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBBZnRlckNvbnRlbnRJbml0LCBFbGVtZW50UmVmLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNZXNzYWdlLCBNZXNzYWdlU2VydmljZSB9IGZyb20gJ3ByaW1lbmctbHRzL2FwaSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1lc3NhZ2VzIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcbiAgICBtZXNzYWdlU2VydmljZTogTWVzc2FnZVNlcnZpY2U7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgdmFsdWU6IE1lc3NhZ2VbXTtcbiAgICBjbG9zYWJsZTogYm9vbGVhbjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBlbmFibGVTZXJ2aWNlOiBib29sZWFuO1xuICAgIGtleTogc3RyaW5nO1xuICAgIGVzY2FwZTogYm9vbGVhbjtcbiAgICBzZXZlcml0eTogc3RyaW5nO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIHRlbXBsYXRlczogUXVlcnlMaXN0PGFueT47XG4gICAgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxNZXNzYWdlW10+O1xuICAgIG1lc3NhZ2VTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBjbGVhclN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGNvbnRlbnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlU2VydmljZTogTWVzc2FnZVNlcnZpY2UsIGVsOiBFbGVtZW50UmVmKTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBoYXNNZXNzYWdlcygpOiBib29sZWFuO1xuICAgIGdldFNldmVyaXR5Q2xhc3MoKTogc3RyaW5nO1xuICAgIGNsZWFyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHJlYWRvbmx5IGljb246IHN0cmluZztcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWVzc2FnZXNNb2R1bGUge1xufVxuIl19