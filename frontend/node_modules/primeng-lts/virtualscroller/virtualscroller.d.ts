import { ElementRef, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { Header, Footer } from 'primeng-lts/api';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { BlockableUI } from 'primeng-lts/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/cdk/scrolling';
import * as ɵngcc3 from 'primeng-lts/api';
export declare class VirtualScroller implements AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    value: any[];
    itemSize: number;
    style: any;
    styleClass: string;
    scrollHeight: any;
    lazy: boolean;
    rows: number;
    minBufferPx: number;
    maxBufferPx: number;
    trackBy: Function;
    header: Header;
    footer: Footer;
    templates: QueryList<any>;
    viewport: CdkVirtualScrollViewport;
    onLazyLoad: EventEmitter<any>;
    itemTemplate: TemplateRef<any>;
    loadingItemTemplate: TemplateRef<any>;
    _totalRecords: number;
    page: number;
    _first: number;
    loadedPages: number[];
    _cache: boolean;
    constructor(el: ElementRef);
    totalRecords: number;
    first: number;
    cache: boolean;
    ngAfterContentInit(): void;
    onScrollIndexChange(index: number): void;
    createPageRange(page: number): number[];
    loadPage(page: number): void;
    getBlockableElement(): HTMLElement;
    scrollTo(index: number, mode?: ScrollBehavior): void;
    scrollToIndex(index: number, mode?: ScrollBehavior): void;
    clearCache(): void;
    ngOnChanges(simpleChange: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<VirtualScroller, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<VirtualScroller, "p-virtualScroller", never, { "trackBy": "trackBy"; "totalRecords": "totalRecords"; "first": "first"; "cache": "cache"; "value": "value"; "itemSize": "itemSize"; "style": "style"; "styleClass": "styleClass"; "scrollHeight": "scrollHeight"; "lazy": "lazy"; "rows": "rows"; "minBufferPx": "minBufferPx"; "maxBufferPx": "maxBufferPx"; }, { "onLazyLoad": "onLazyLoad"; }, ["header", "footer", "templates"], ["p-header", "p-footer"]>;
}
export declare class VirtualScrollerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<VirtualScrollerModule, [typeof VirtualScroller], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ScrollingModule], [typeof VirtualScroller, typeof ɵngcc3.SharedModule, typeof ɵngcc2.ScrollingModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<VirtualScrollerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbHNjcm9sbGVyLmQudHMiLCJzb3VyY2VzIjpbInZpcnR1YWxzY3JvbGxlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQsIEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIZWFkZXIsIEZvb3RlciB9IGZyb20gJ3ByaW1lbmctbHRzL2FwaSc7XG5pbXBvcnQgeyBDZGtWaXJ0dWFsU2Nyb2xsVmlld3BvcnQgfSBmcm9tICdAYW5ndWxhci9jZGsvc2Nyb2xsaW5nJztcbmltcG9ydCB7IEJsb2NrYWJsZVVJIH0gZnJvbSAncHJpbWVuZy1sdHMvYXBpJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFZpcnR1YWxTY3JvbGxlciBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIEJsb2NrYWJsZVVJLCBPbkNoYW5nZXMge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHZhbHVlOiBhbnlbXTtcbiAgICBpdGVtU2l6ZTogbnVtYmVyO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHNjcm9sbEhlaWdodDogYW55O1xuICAgIGxhenk6IGJvb2xlYW47XG4gICAgcm93czogbnVtYmVyO1xuICAgIG1pbkJ1ZmZlclB4OiBudW1iZXI7XG4gICAgbWF4QnVmZmVyUHg6IG51bWJlcjtcbiAgICB0cmFja0J5OiBGdW5jdGlvbjtcbiAgICBoZWFkZXI6IEhlYWRlcjtcbiAgICBmb290ZXI6IEZvb3RlcjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIHZpZXdwb3J0OiBDZGtWaXJ0dWFsU2Nyb2xsVmlld3BvcnQ7XG4gICAgb25MYXp5TG9hZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGxvYWRpbmdJdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX3RvdGFsUmVjb3JkczogbnVtYmVyO1xuICAgIHBhZ2U6IG51bWJlcjtcbiAgICBfZmlyc3Q6IG51bWJlcjtcbiAgICBsb2FkZWRQYWdlczogbnVtYmVyW107XG4gICAgX2NhY2hlOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKTtcbiAgICB0b3RhbFJlY29yZHM6IG51bWJlcjtcbiAgICBmaXJzdDogbnVtYmVyO1xuICAgIGNhY2hlOiBib29sZWFuO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG9uU2Nyb2xsSW5kZXhDaGFuZ2UoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgY3JlYXRlUGFnZVJhbmdlKHBhZ2U6IG51bWJlcik6IG51bWJlcltdO1xuICAgIGxvYWRQYWdlKHBhZ2U6IG51bWJlcik6IHZvaWQ7XG4gICAgZ2V0QmxvY2thYmxlRWxlbWVudCgpOiBIVE1MRWxlbWVudDtcbiAgICBzY3JvbGxUbyhpbmRleDogbnVtYmVyLCBtb2RlPzogU2Nyb2xsQmVoYXZpb3IpOiB2b2lkO1xuICAgIHNjcm9sbFRvSW5kZXgoaW5kZXg6IG51bWJlciwgbW9kZT86IFNjcm9sbEJlaGF2aW9yKTogdm9pZDtcbiAgICBjbGVhckNhY2hlKCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoc2ltcGxlQ2hhbmdlOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFZpcnR1YWxTY3JvbGxlck1vZHVsZSB7XG59XG4iXX0=